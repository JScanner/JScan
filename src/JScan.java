import javax.swing.*;
import java.awt.*;
import java.util.Base64;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicBoolean;

public class JScan {
    private static final String ICON_B64 = "";
    private static final String SUBNET_PREFIX = "192.168.";
    private static final int THREADS = 20000;
    private static JTextArea successTextArea;
    private static JTextArea failureTextArea;
    private static JButton startButton;
    private static JButton stopButton;
    private static PrintWriter logWriter;
    private static ExecutorService executorService;
    private static AtomicBoolean isScanning;

    public static void main(String[] args) {
        SwingUtilities.invokeLater(JScan::createAndShowGUI);
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("JScan - Public beta 1.2.9");
        byte[] iconBytes = Base64.getDecoder().decode(ICON_B64);
        ImageIcon icon = new ImageIcon(iconBytes);
        frame.setIconImage(icon.getImage());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        frame.getContentPane().setBackground(Color.decode("#282c36"));

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        startButton = new JButton("Start Scanning");
        startButton.setBackground(Color.decode("#008000"));
        startButton.setForeground(Color.WHITE);
        startButton.addActionListener(e -> startScan());
        stopButton = new JButton("Stop Scanning");
        stopButton.setEnabled(false);
        stopButton.setBackground(Color.decode("#800000"));
        stopButton.setForeground(Color.WHITE);
        stopButton.addActionListener(e -> stopScan());
        buttonPanel.add(startButton);
        buttonPanel.add(stopButton);
        buttonPanel.setBackground(Color.decode("#282c36"));
        frame.add(buttonPanel, BorderLayout.NORTH);

        JPanel textPanel = new JPanel(new GridLayout(1, 2));
        textPanel.setBackground(Color.decode("#282c36"));

        successTextArea = new JTextArea(20, 25);
        successTextArea.setEditable(false);
        successTextArea.setBackground(Color.decode("#1a1e24"));
        successTextArea.setForeground(Color.GREEN);
        JScrollPane successScrollPane = new JScrollPane(successTextArea);
        textPanel.add(successScrollPane);

        failureTextArea = new JTextArea(20, 25);
        failureTextArea.setEditable(false);
        failureTextArea.setBackground(Color.decode("#1a1e24"));
        failureTextArea.setForeground(Color.RED);
        JScrollPane failureScrollPane = new JScrollPane(failureTextArea);
        textPanel.add(failureScrollPane);

        frame.add(textPanel, BorderLayout.CENTER);

        frame.pack();
        frame.setSize(1000, 600);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);

        isScanning = new AtomicBoolean(false);
    }

    private static void startScan() {
        if (isScanning.get()) {
            return;
        }
        isScanning.set(true);
        startButton.setEnabled(false);
        stopButton.setEnabled(true);

        int[] portsToScan = new int[65535];
        for (int i = 0; i < 65535; i++) {
            portsToScan[i] = i + 1;
        }
        executorService = Executors.newFixedThreadPool(THREADS);
        for (int i = 1; i <= 255; i++) {
            final int subnet = i;
            executorService.submit(() -> scanIPSubnet(subnet, portsToScan));
        }
    }

    private static void scanIPSubnet(int subnet, int[] portsToScan) {
        String targetPrefix = SUBNET_PREFIX + subnet + ".";
        for (int i = 1; i <= 255; i++) {
            String targetIp = targetPrefix + i;
            for (int port : portsToScan) {
                if (!isScanning.get()) {
                    break;
                }
                final int finalPort = port;
                scanPort(targetIp, finalPort);
            }
        }
    }

    private static void scanPort(String ip, int port) {
        try (Socket socket = new Socket()) {
            socket.connect(new InetSocketAddress(ip, port), 100);
            updateTextArea(successTextArea, "Port " + port + " is open on IP " + ip);
            logWriter.println("Port " + port + " is open on IP " + ip);
        } catch (IOException e) {
            updateTextArea(failureTextArea, "Port " + port + " is closed on IP " + ip);
        }
    }

    private static void stopScan() {
        if (!isScanning.get()) {
            return;
        }
        isScanning.set(false);
        startButton.setEnabled(true);
        stopButton.setEnabled(false);
        if (executorService != null) {
            executorService.shutdownNow();
        }
    }

    private static void updateTextArea(JTextArea area, String message) {
        SwingUtilities.invokeLater(() -> area.append(message + "\n"));
    }
}
